{
    "source":{
        "datasource":"impala0",
        "queryCommand":"SELECT a.statistical_start_time AS 'r_stattime', c.product_number AS 'service_account', a.traffic_up, a.traffic_dn, c.bandwidth , a.tcpconnect_count, a.tcpsuccessconnect_count, a.tcpdatapackage_count, a.tcpretransmit_count, a.shakehands_delay , a.client_delay, a.server_delay, b.http_delay, b.httpgettimes, b.httpgetsuctimes , b.httpposttimes, b.httppostsuctimes, b.firstbyte_loadingtime, a.tcpupdatapkgs, a.tcpuprecon , a.tcpdowndatapkgs, a.tcpdownrecon, a.tcp_connect_suc_count, b.http_session_suc_count, c.user_name FROM(SELECT statistical_start_time, user_account , SUM(ISNULL(ul_ip_len, 0)) AS 'traffic_up' , SUM(ISNULL(dl_ip_len, 0)) AS 'traffic_dn' , SUM(ISNULL(tcp_link_count, 0)) AS 'tcpconnect_count' , SUM(ISNULL(tcp_link_success_count, 0)) AS 'tcpsuccessconnect_count' , SUM(ISNULL(tcp_ul_packet_count, 0) + ISNULL(tcp_dl_packet_count, 0)) AS 'tcpdatapackage_count' , SUM(ISNULL(tcp_ul_retrans_count, 0) + ISNULL(tcp_dl_retrans_count, 0)) AS 'tcpretransmit_count' , CASE WHEN SUM(ISNULL(tcp_link_time_delay_count, 0)) != 0 THEN SUM(ISNULL(tcp_link_time_delay_sum, 0)) / SUM(ISNULL(tcp_link_time_delay_count, 0)) ELSE 0 END AS 'shakehands_delay' , CASE WHEN SUM(ISNULL(tcp_client_time_delay_count, 0)) != 0 THEN SUM(ISNULL(tcp_client_time_delay_sum, 0)) / SUM(ISNULL(tcp_client_time_delay_count, 0)) ELSE 0 END AS 'client_delay' , CASE WHEN SUM(ISNULL(tcp_server_time_delay_count, 0)) != 0 THEN SUM(ISNULL(tcp_server_time_delay_sum, 0)) / SUM(ISNULL(tcp_server_time_delay_count, 0)) ELSE 0 END AS 'server_delay', SUM(ISNULL(tcp_ul_packet_count, 0)) AS 'tcpupdatapkgs' , SUM(ISNULL(tcp_ul_retrans_count, 0)) AS 'tcpuprecon' , SUM(ISNULL(tcp_dl_packet_count, 0)) AS 'tcpdowndatapkgs' , SUM(ISNULL(tcp_dl_retrans_count, 0)) AS 'tcpdownrecon' , SUM(ISNULL(tcp_link_success_count, 0)) AS 'tcp_connect_suc_count' FROM gemstack.wb_total_kpi_15m_uid_app WHERE slicetime >= ? AND ? > slicetime AND user_type = '5' GROUP BY 1, 2) a, (SELECT statistical_start_time, user_account , CASE WHEN SUM(ISNULL(http_response_time_delay_count, 0)) != 0 THEN SUM(ISNULL(http_response_time_delay_sum, 0)) / SUM(ISNULL(http_response_time_delay_count, 0)) ELSE 0 END AS 'http_delay', SUM(ISNULL(http_get_request_count, 0)) AS 'httpgettimes' , SUM(ISNULL(http_get_success_count, 0)) AS 'httpgetsuctimes' , SUM(ISNULL(http_post_request_count, 0)) AS 'httpposttimes' , SUM(ISNULL(http_post_success_count, 0)) AS 'httppostsuctimes' , CASE WHEN SUM(ISNULL(http_first_byte_delay_count, 0)) != 0 THEN SUM(ISNULL(http_first_byte_delay_sum, 0)) / SUM(ISNULL(http_first_byte_delay_count, 0)) ELSE 0 END AS 'firstbyte_loadingtime', SUM(ISNULL(http_reply_success_count, 0)) AS 'http_session_suc_count' FROM gemstack.wb_http_kpi_15m_uid_app_direct WHERE slicetime >= ? AND ? > slicetime AND user_type = '5' GROUP BY 1, 2) b, (SELECT user_ip, user_name, bandwidth, product_number FROM gemstack.gemstack_fix_line_configs) c WHERE a.statistical_start_time = b.statistical_start_time AND a.user_account = b.user_account AND a.user_account = c.user_ip AND CAST(CAST(from_unixtime(CAST(a.statistical_start_time AS BIGINT), 'yyyyMMddHHmm') AS STRING) AS BIGINT) = ?",
        "firstQueryCommand":"",
        "trigger":{
            "timer":{
                "updateInterval":"15"
            },
            "messager":{
                "msgID":""
            }
        },
        "time":{
            "trim":{
                "mode":"MINUTE",
                "minute":"15"
            },
            "delay":"45",
            "timeslot":"15"
        }
    },
    "dest":[
	    {
            "type":"mysql",
            "datasource":"mysql1",
            "actions":[
                {
                    "sqlCommand":"INSERT INTO q_report_fixlineuser_min VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
                    "columns":[
          			      "r_stattime",
                          "service_account",
                          "traffic_up",
                          "traffic_dn",
                          "bandwidth",
                          "tcpconnect_count",
                          "tcpsuccessconnect_count",
                          "tcpdatapackage_count",
                          "tcpretransmit_count",
                          "shakehands_delay",
                          "client_delay",
                          "server_delay",
                          "http_delay",
                          "httpgettimes",
                          "httpgetsuctimes",
                          "httpposttimes",
                          "httppostsuctimes",
                          "firstbyte_loadingtime",
                          "tcpupdatapkgs",
                          "tcpuprecon",
                          "tcpdowndatapkgs",
                          "tcpdownrecon",
                          "tcp_connect_suc_count",
                          "http_session_suc_count",
                          "user_name"
                    ]
                }
            ]
        },{
            "type":"sqlserver",
            "datasource":"sqlserver0",
            "actions":[
                {
                    "sqlCommand":"INSERT INTO q_report_fixlineuser_min VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
                    "columns":[
          			      "r_stattime",
                          "service_account",
                          "traffic_up",
                          "traffic_dn",
                          "bandwidth",
                          "tcpconnect_count",
                          "tcpsuccessconnect_count",
                          "tcpdatapackage_count",
                          "tcpretransmit_count",
                          "shakehands_delay",
                          "client_delay",
                          "server_delay",
                          "http_delay",
                          "httpgettimes",
                          "httpgetsuctimes",
                          "httpposttimes",
                          "httppostsuctimes",
                          "firstbyte_loadingtime",
                          "tcpupdatapkgs",
                          "tcpuprecon",
                          "tcpdowndatapkgs",
                          "tcpdownrecon",
                          "tcp_connect_suc_count",
                          "http_session_suc_count",
                          "user_name"
                    ]
                }
            ]
        },{
            "type":"FileSystem",
            "actions":[
                {
                    "datasource":"fileSys2",
                    "filename":"网调_5_q_report_fixlineuser_min-%startTime:yyyyMMddHHmm%_%endTime:yyyyMMddHHmm%",
                    "finishedFilename":"网调_5_q_report_fixlineuser_min-%startTime:yyyyMMddHHmm%_%endTime:yyyyMMddHHmm%",
                    "compressor":""
                }
            ]
        }
    ]
}