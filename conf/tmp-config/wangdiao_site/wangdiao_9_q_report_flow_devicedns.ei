{
    "source":{
        "datasource":"impala0",
        "queryCommand":"SELECT DNS_DELAY, DNSANALYTIMES, DNSANALYSUCTIMES, R_STATTIME, ENDTIME , DEVICE_TYPE, DEVICE_ID, DNSANALY_RATE, DNSRESPONSETIMES, DNSRESPONSE_RATE , DNS_SESSION_SUC_COUNT FROM( SELECT CASE WHEN SUM(ISNULL(dns_time_delay_count, 0)) != 0 THEN SUM(ISNULL(dns_time_delay_sum, 0)) / SUM(ISNULL(dns_time_delay_count, 0)) ELSE 0 END AS 'DNS_DELAY', SUM(ISNULL(dns_request_count, 0)) AS 'DNSANALYTIMES' , SUM(ISNULL(dns_success_count, 0)) AS 'DNSANALYSUCTIMES' , statistical_start_time AS 'R_STATTIME', statistical_end_time AS 'ENDTIME', bras_bng_device_type AS 'DEVICE_TYPE', bras_bng_device_id AS 'DEVICE_ID' , CASE WHEN SUM(ISNULL(dns_request_count, 0)) != 0 THEN SUM(ISNULL(dns_success_count, 0)) / SUM(ISNULL(dns_request_count, 0)) * 100 ELSE 0 END AS 'DNSANALY_RATE', SUM(ISNULL(dns_response_count, 0)) AS 'DNSRESPONSETIMES' , CASE WHEN SUM(ISNULL(dns_request_count, 0)) != 0 THEN SUM(ISNULL(dns_response_count, 0)) / SUM(ISNULL(dns_request_count, 0)) * 100 ELSE 0 END AS 'DNSRESPONSE_RATE', SUM(ISNULL(dns_request_count, 0)) AS 'DNS_SESSION_SUC_COUNT' FROM gemstack.wb_dns_kpi_15m_device WHERE slicetime >= ? AND ? > slicetime GROUP BY 4, 5, 6, 7 UNION ALL SELECT CASE WHEN SUM(ISNULL(dns_time_delay_count, 0)) != 0 THEN SUM(ISNULL(dns_time_delay_sum, 0)) / SUM(ISNULL(dns_time_delay_count, 0)) ELSE 0 END AS 'DNS_DELAY', SUM(ISNULL(dns_request_count, 0)) AS 'DNSANALYTIMES' , SUM(ISNULL(dns_success_count, 0)) AS 'DNSANALYSUCTIMES' , statistical_start_time AS 'R_STATTIME', statistical_end_time AS 'ENDTIME', olt_device_type AS 'DEVICE_TYPE', olt_device_id AS 'DEVICE_ID' , CASE WHEN SUM(ISNULL(dns_request_count, 0)) != 0 THEN SUM(ISNULL(dns_success_count, 0)) / SUM(ISNULL(dns_request_count, 0)) * 100 ELSE 0 END AS 'DNSANALY_RATE', SUM(ISNULL(dns_response_count, 0)) AS 'DNSRESPONSETIMES' , CASE WHEN SUM(ISNULL(dns_request_count, 0)) != 0 THEN SUM(ISNULL(dns_response_count, 0)) / SUM(ISNULL(dns_request_count, 0)) * 100 ELSE 0 END AS 'DNSRESPONSE_RATE', SUM(ISNULL(dns_request_count, 0)) AS 'DNS_SESSION_SUC_COUNT' FROM gemstack.wb_dns_kpi_15m_device WHERE slicetime >= ? AND ? > slicetime GROUP BY 4, 5, 6, 7 UNION ALL SELECT CASE WHEN SUM(ISNULL(dns_time_delay_count, 0)) != 0 THEN SUM(ISNULL(dns_time_delay_sum, 0)) / SUM(ISNULL(dns_time_delay_count, 0)) ELSE 0 END AS 'DNS_DELAY', SUM(ISNULL(dns_request_count, 0)) AS 'DNSANALYTIMES' , SUM(ISNULL(dns_success_count, 0)) AS 'DNSANALYSUCTIMES' , statistical_start_time AS 'R_STATTIME', statistical_end_time AS 'ENDTIME', onu_device_type AS 'DEVICE_TYPE', onu_device_id AS 'DEVICE_ID' , CASE WHEN SUM(ISNULL(dns_request_count, 0)) != 0 THEN SUM(ISNULL(dns_success_count, 0)) / SUM(ISNULL(dns_request_count, 0)) * 100 ELSE 0 END AS 'DNSANALY_RATE', SUM(ISNULL(dns_response_count, 0)) AS 'DNSRESPONSETIMES' , CASE WHEN SUM(ISNULL(dns_request_count, 0)) != 0 THEN SUM(ISNULL(dns_response_count, 0)) / SUM(ISNULL(dns_request_count, 0)) * 100 ELSE 0 END AS 'DNSRESPONSE_RATE', SUM(ISNULL(dns_request_count, 0)) AS 'DNS_SESSION_SUC_COUNT' FROM gemstack.wb_dns_kpi_15m_device WHERE slicetime >= ? AND ? > slicetime GROUP BY 4, 5, 6, 7) u WHERE CAST(CAST(from_unixtime(CAST(R_STATTIME AS BIGINT), 'yyyyMMddHHmm') AS STRING) AS BIGINT) = ?",
        "firstQueryCommand":"",
        "trigger":{
            "timer":{
                "updateInterval":"15"
            },
            "messager":{
                "msgID":""
            }
        },
        "time":{
            "trim":{
                "mode":"MINUTE",
                "minute":"15"
            },
            "delay":"45",
            "timeslot":"15"
        }
    },
    "dest":[
	    {
            "type":"mysql",
            "datasource":"mysql1",
            "actions":[
                {
                    "sqlCommand":"INSERT INTO q_report_flow_devicedns VALUES (?,?,?,?,?,?,?,?,?,?,?)",
                    "columns":[
          			      "DNS_DELAY",
                          "DNSANALYTIMES",
                          "DNSANALYSUCTIMES",
                          "R_STATTIME",
                          "ENDTIME",
                          "DEVICE_TYPE",
                          "DEVICE_ID",
                          "DNSANALY_RATE",
                          "DNSRESPONSETIMES",
                          "DNSRESPONSE_RATE",
                          "DNS_SESSION_SUC_COUNT"
                    ]
                }
            ]
        },
        {
            "type":"sqlserver",
            "datasource":"sqlserver0",
            "actions":[
                {
                    "sqlCommand":"INSERT INTO q_report_flow_devicedns VALUES (?,?,?,?,?,?,?,?,?,?,?)",
                    "columns":[
          			      "DNS_DELAY",
                          "DNSANALYTIMES",
                          "DNSANALYSUCTIMES",
                          "R_STATTIME",
                          "ENDTIME",
                          "DEVICE_TYPE",
                          "DEVICE_ID",
                          "DNSANALY_RATE",
                          "DNSRESPONSETIMES",
                          "DNSRESPONSE_RATE",
                          "DNS_SESSION_SUC_COUNT"
                    ]
                }
            ]
        },
        {
            "type":"FileSystem",
            "actions":[
                {
                    "datasource":"fileSys2",
                    "filename":"网调_9_q_report_flow_devicedns-%startTime:yyyyMMddHHmm%_%endTime:yyyyMMddHHmm%",
                    "finishedFilename":"网调_9_q_report_flow_devicedns-%startTime:yyyyMMddHHmm%_%endTime:yyyyMMddHHmm%",
                    "compressor":""
                }
            ]
        }
    ]
}